name: APPS - Preview Deployment ðŸ‘€
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID_WEB: ${{ secrets.VERCEL_PROJECT_ID_WEB }}
  VERCEL_PROJECT_ID_EMBED: ${{ secrets.VERCEL_PROJECT_ID_EMBED }}
  VERCEL_PROJECT_ID_OG: ${{ secrets.VERCEL_PROJECT_ID_OG }}

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
    
jobs:
  Deploy-Preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Install Vercel CLI
        run: yarn global add vercel@latest

      - name: Deploy to Vercel ãƒ» WEB
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_WEB }}
        run: |
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
          url="$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})"
          if [ "${{ github.event.inputs.branch }}" == "testnet" ]; then
            vercel alias --token=${{ secrets.VERCEL_TOKEN }} set "$url" testnet.digiv3rse.xyz
          fi

      - name: Deploy to Vercel ãƒ» EMBED
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_EMBED }}
        run: |
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
          url="$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})"
          if [ "${{ github.event.inputs.branch }}" == "testnet" ]; then
            vercel alias --token=${{ secrets.VERCEL_TOKEN }} set "$url" embed-testnet.digiv3rse.xyz
          fi
 
      - name: Deploy to Vercel ãƒ» OG
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_OG }}
        run: |
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
 